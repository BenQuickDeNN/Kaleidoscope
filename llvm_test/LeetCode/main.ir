; ModuleID = 'main.bc'
source_filename = "LongestSubstringWithoutReapeatingCharacters.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator" = type { i8 }

$_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"%d\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"abcabcbb\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"bbbbb\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"pwwkew\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"aabaab!bb\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: noinline norecurse optnone uwtable
define dso_local i32 @main() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::__cxx11::basic_string", align 8
  %2 = alloca %"class.std::allocator", align 1
  %3 = alloca i8*
  %4 = alloca i32
  %5 = alloca %"class.std::__cxx11::basic_string", align 8
  %6 = alloca %"class.std::allocator", align 1
  %7 = alloca %"class.std::__cxx11::basic_string", align 8
  %8 = alloca %"class.std::allocator", align 1
  %9 = alloca %"class.std::__cxx11::basic_string", align 8
  %10 = alloca %"class.std::allocator", align 1
  %11 = alloca %"class.std::__cxx11::basic_string", align 8
  %12 = alloca %"class.std::allocator", align 1
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %2) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), %"class.std::allocator"* dereferenceable(1) %2)
          to label %13 unwind label %38

13:                                               ; preds = %0
  %14 = invoke i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %1)
          to label %15 unwind label %42

15:                                               ; preds = %13
  %16 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %14)
          to label %17 unwind label %42

17:                                               ; preds = %15
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %1) #6
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %2) #6
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %6) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator"* dereferenceable(1) %6)
          to label %18 unwind label %47

18:                                               ; preds = %17
  %19 = invoke i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %5)
          to label %20 unwind label %51

20:                                               ; preds = %18
  %21 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %19)
          to label %22 unwind label %51

22:                                               ; preds = %20
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %5) #6
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %6) #6
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %8) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %"class.std::allocator"* dereferenceable(1) %8)
          to label %23 unwind label %56

23:                                               ; preds = %22
  %24 = invoke i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %7)
          to label %25 unwind label %60

25:                                               ; preds = %23
  %26 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %24)
          to label %27 unwind label %60

27:                                               ; preds = %25
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %7) #6
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %8) #6
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %10) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator"* dereferenceable(1) %10)
          to label %28 unwind label %65

28:                                               ; preds = %27
  %29 = invoke i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %9)
          to label %30 unwind label %69

30:                                               ; preds = %28
  %31 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %29)
          to label %32 unwind label %69

32:                                               ; preds = %30
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %9) #6
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %10) #6
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %12) #6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), %"class.std::allocator"* dereferenceable(1) %12)
          to label %33 unwind label %74

33:                                               ; preds = %32
  %34 = invoke i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %11)
          to label %35 unwind label %78

35:                                               ; preds = %33
  %36 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %34)
          to label %37 unwind label %78

37:                                               ; preds = %35
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %11) #6
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %12) #6
  ret i32 0

38:                                               ; preds = %0
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  br label %46

42:                                               ; preds = %15, %13
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %3, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %1) #6
  br label %46

46:                                               ; preds = %42, %38
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %2) #6
  br label %83

47:                                               ; preds = %17
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %3, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %4, align 4
  br label %55

51:                                               ; preds = %20, %18
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %5) #6
  br label %55

55:                                               ; preds = %51, %47
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %6) #6
  br label %83

56:                                               ; preds = %22
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %3, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %4, align 4
  br label %64

60:                                               ; preds = %25, %23
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %7) #6
  br label %64

64:                                               ; preds = %60, %56
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %8) #6
  br label %83

65:                                               ; preds = %27
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %3, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %4, align 4
  br label %73

69:                                               ; preds = %30, %28
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %3, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %9) #6
  br label %73

73:                                               ; preds = %69, %65
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %10) #6
  br label %83

74:                                               ; preds = %32
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %3, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %4, align 4
  br label %82

78:                                               ; preds = %35, %33
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %3, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %4, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %11) #6
  br label %82

82:                                               ; preds = %78, %74
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %12) #6
  br label %83

83:                                               ; preds = %82, %73, %64, %55, %46
  %84 = load i8*, i8** %3, align 8
  %85 = load i32, i32* %4, align 4
  %86 = insertvalue { i8*, i32 } undef, i8* %84, 0
  %87 = insertvalue { i8*, i32 } %86, i32 %85, 1
  resume { i8*, i32 } %87
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i32 @_ZN8Solution24lengthOfLongestSubstringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* %0) #2 comdat align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca [2 x i64], align 16
  %6 = alloca [2 x i64], align 16
  %7 = alloca [2 x i64], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = call zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0))
  br i1 %15, label %16, label %17

16:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %154

17:                                               ; preds = %1
  %18 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* %0) #6
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %3, align 4
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  store i32 0, i32* %2, align 4
  br label %154

23:                                               ; preds = %17
  %24 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 16, i1 false)
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i8 64, i8* %12, align 1
  br label %25

25:                                               ; preds = %137, %23
  %26 = load i32, i32* %9, align 4
  %27 = load i32, i32* %3, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %140

29:                                               ; preds = %25
  %30 = load i32, i32* %9, align 4
  %31 = zext i32 %30 to i64
  %32 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %0, i64 %31)
  %33 = load i8, i8* %32, align 1
  store i8 %33, i8* %4, align 1
  %34 = load i8, i8* %4, align 1
  %35 = sext i8 %34 to i32
  %36 = load i8, i8* %12, align 1
  %37 = zext i8 %36 to i32
  %38 = sdiv i32 %35, %37
  %39 = trunc i32 %38 to i8
  store i8 %39, i8* %13, align 1
  %40 = load i8, i8* %4, align 1
  %41 = sext i8 %40 to i32
  %42 = load i8, i8* %12, align 1
  %43 = zext i8 %42 to i32
  %44 = srem i32 %41, %43
  %45 = shl i32 1, %44
  %46 = sext i32 %45 to i64
  %47 = load i8, i8* %13, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 %48
  store i64 %46, i64* %49, align 8
  %50 = load i8, i8* %13, align 1
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 %51
  %53 = load i64, i64* %52, align 8
  %54 = load i8, i8* %13, align 1
  %55 = zext i8 %54 to i64
  %56 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %53, %57
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %127

60:                                               ; preds = %29
  %61 = load i32, i32* %9, align 4
  %62 = load i32, i32* %8, align 4
  %63 = sub i32 %61, %62
  store i32 %63, i32* %11, align 4
  %64 = load i32, i32* %11, align 4
  %65 = load i32, i32* %10, align 4
  %66 = icmp ugt i32 %64, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = load i32, i32* %11, align 4
  br label %71

69:                                               ; preds = %60
  %70 = load i32, i32* %10, align 4
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i32 [ %68, %67 ], [ %70, %69 ]
  store i32 %72, i32* %10, align 4
  br label %73

73:                                               ; preds = %113, %71
  %74 = load i32, i32* %8, align 4
  %75 = load i32, i32* %9, align 4
  %76 = icmp ule i32 %74, %75
  br i1 %76, label %77, label %126

77:                                               ; preds = %73
  %78 = load i32, i32* %8, align 4
  %79 = zext i32 %78 to i64
  %80 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %0, i64 %79)
  %81 = load i8, i8* %80, align 1
  store i8 %81, i8* %4, align 1
  %82 = load i8, i8* %4, align 1
  %83 = sext i8 %82 to i32
  %84 = load i8, i8* %12, align 1
  %85 = zext i8 %84 to i32
  %86 = sdiv i32 %83, %85
  %87 = trunc i32 %86 to i8
  store i8 %87, i8* %14, align 1
  %88 = load i32, i32* %8, align 4
  %89 = zext i32 %88 to i64
  %90 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %0, i64 %89)
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = load i8, i8* %12, align 1
  %94 = zext i8 %93 to i32
  %95 = srem i32 %92, %94
  %96 = shl i32 1, %95
  %97 = sext i32 %96 to i64
  %98 = load i8, i8* %14, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 %99
  store i64 %97, i64* %100, align 8
  %101 = load i8, i8* %14, align 1
  %102 = zext i8 %101 to i64
  %103 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 %102
  %104 = load i64, i64* %103, align 8
  %105 = load i8, i8* %13, align 1
  %106 = zext i8 %105 to i64
  %107 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 %106
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %104, %108
  br i1 %109, label %110, label %113

110:                                              ; preds = %77
  %111 = load i32, i32* %8, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %8, align 4
  br label %126

113:                                              ; preds = %77
  %114 = load i8, i8* %14, align 1
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 %115
  %117 = load i64, i64* %116, align 8
  %118 = xor i64 %117, -1
  %119 = load i8, i8* %14, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 %120
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %118
  store i64 %123, i64* %121, align 8
  %124 = load i32, i32* %8, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %8, align 4
  br label %73

126:                                              ; preds = %110, %73
  br label %137

127:                                              ; preds = %29
  %128 = load i8, i8* %13, align 1
  %129 = zext i8 %128 to i64
  %130 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 %129
  %131 = load i64, i64* %130, align 8
  %132 = load i8, i8* %13, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = or i64 %135, %131
  store i64 %136, i64* %134, align 8
  br label %137

137:                                              ; preds = %127, %126
  %138 = load i32, i32* %9, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %9, align 4
  br label %25

140:                                              ; preds = %25
  %141 = load i32, i32* %3, align 4
  %142 = load i32, i32* %8, align 4
  %143 = sub i32 %141, %142
  store i32 %143, i32* %11, align 4
  %144 = load i32, i32* %11, align 4
  %145 = load i32, i32* %10, align 4
  %146 = icmp ugt i32 %144, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = load i32, i32* %11, align 4
  br label %151

149:                                              ; preds = %140
  %150 = load i32, i32* %10, align 4
  br label %151

151:                                              ; preds = %149, %147
  %152 = phi i32 [ %148, %147 ], [ %150, %149 ]
  store i32 %152, i32* %10, align 4
  %153 = load i32, i32* %10, align 4
  store i32 %153, i32* %2, align 4
  br label %154

154:                                              ; preds = %151, %22, %16
  %155 = load i32, i32* %2, align 4
  ret i32 %155
}

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::allocator"*) unnamed_addr #3

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::allocator"*) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %0, i8* %1) #4 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* %5, i8* %6) #6
  %8 = icmp eq i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare dso_local dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"*, i8*) #3

attributes #0 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.0-svn362770-1~exp1+0~20190607061653.2401~1.gbp2444fc (trunk)"}
